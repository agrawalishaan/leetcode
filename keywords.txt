learning purposes = review a concept or walkthrough a problems
difficulty = leetcode problem difficulty
modfications = slightly different ways to think about or implement a solution
helper = shows if this problem helps explain another problem, or uses a helper problem

tags:
arrays (sometimes used when we don't put a problem in the array category but it still has a lot of array/hashing work)
backtracking
beats 100%
bfs
binary search
binary tree
bit manipulation
bit mask
bottom up recursion
bst [binary search tree]
bubble sort
bucket sort
circular
deque
dfs
dynamic programming 1d
graph(s)
graphs with nodes (this means our graph takes the form of nodes and .neighbors, instead of for instance a matrix)
greedy - not really used for problems that aren't explicitly tagged greedy, since lots of problems use greedy methods but the focus is on another part of the problem
heap
inorder traversal
insertion sort
intervals
kadane's
math
matrix bfs
matrix dfs
monotonic deque
monotonic queue
monotonic stack
multibranch (recursive or iterative)
palindrome
prefix
preorder traversal
postfix
postorder traversal
recursion
rolling hash
quickselect
quicksort
queue
self balancing bst
single branch (recursive or iterative)
sliding window (fixed/variable)
slow and fast pointers
stack
state machine
top down recursion [with memoization]
trie
two pointers
undirected graphs